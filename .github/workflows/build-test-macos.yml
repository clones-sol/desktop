name: Build macOS Dev/Test App (Unsigned)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            artifact_name: 'desktop-app-macos-arm64-test'
            target: 'aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            artifact_name: 'desktop-app-macos-x64-test'
            target: 'x86_64-apple-darwin'

    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build Flutter Web
        run: flutter build web --base-href /

      - name: Create development environment files
        run: |
          # Create .env.local from GitHub secret
          echo "${{ secrets.ENV_FILE_TEST }}" > .env.local

      - name: Install Tauri CLI
        run: cargo install tauri-cli --version "^2.0"

      - name: Build Tauri Test App (Unsigned)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Disable signing for test builds
          TAURI_SIGNING_PRIVATE_KEY: ""
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ""
        run: |
          cd src-tauri
          # Build without signing in dev mode
          cargo tauri build ${{ matrix.args }} --config tauri.conf.json

      - name: List build artifacts (debug)
        run: |
          echo "=== Build artifacts ==="
          find src-tauri/target/${{ matrix.target }}/release/bundle -type f -name "*.app" -o -name "*.dmg" || true
          ls -la src-tauri/target/${{ matrix.target }}/release/bundle/ || true

      - name: Create ZIP of .app for easy download
        run: |
          cd src-tauri/target/${{ matrix.target }}/release/bundle/macos
          if [ -d "clones-desktop.app" ]; then
            zip -r "clones-desktop-${{ matrix.target }}-test.zip" "clones-desktop.app"
          fi

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/macos/*.zip
            src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
          if-no-files-found: warn